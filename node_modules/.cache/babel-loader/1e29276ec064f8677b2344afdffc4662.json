{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\react-form\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Container, FormWrap, Icon, FormContent, Form, FormH1, FormLabel, FormInput, ErrorWrap, FormInputMessage, FormButton } from \"./ContactFormElements\"; // import { ToastContainer, toast } from \"react-toastify\";\n// import \"react-toastify/dist/ReactToastify.css\";\n\nimport { useForm } from \"react-hook-form\"; // import axios from \"axios\";\n\nimport { init, sendForm } from \"emailjs-com\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ninit(\"user_PTcswjb7gW4kgFL6hIIH4\");\n\nconst App = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm(); //ini cara ke node js\n  // async function onSubmit(values) {\n  //   const REACT_PUBLIC_API_URL = \"http://localhost:3000\";\n  //   let config = {\n  //     method: \"POST\",\n  //     url: `${process.env.REACT_PUBLIC_API_URL}/pai/contact`,\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     data: values,\n  //   };\n  //   try {\n  //     const response = await axios(config);\n  //     console.log(response);\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // }\n  // console.log(errors);\n  //ini dengan cara ke google sheet\n  // const [data, setData] = useState({\n  //   name: \"\",\n  //   email: \"\",\n  //   phone: \"\",\n  //   message: \"\",\n  // });\n  // const { name, email, phone, message } = data;\n  // const handleChange = (e) => {\n  //   setData({ ...data, [e.target.name]: e.target.value });\n  // };\n  // const onSubmit = async (e) => {\n  //   e.preventDefault();\n  //   try {\n  //     const response = await fetch(\n  //       \"https://v1.nocodeapi.com/mfikri_/google_sheets/AbjCYjUIBePJWqnU?tabId=Sheet1\",\n  //       {\n  //         method: \"POST\",\n  //         headers: {\n  //           \"Content-Type\": \"application/json\",\n  //         },\n  //         body: JSON.stringify([\n  //           [name, email, phone, message, new Date().toLocaleString()],\n  //         ]),\n  //       }\n  //     );\n  //     await response.json();\n  //     setData({ ...data, name: \"\", email: \"\", phone: \"\", message: \"\" });\n  //     toast.success(\"Success send message\", {\n  //       position: \"top-center\",\n  //       autoClose: 3000,\n  //       hideProgressBar: true,\n  //       closeOnClick: true,\n  //       pauseOnHover: false,\n  //       draggable: true,\n  //       progress: undefined,\n  //     });\n  //     console.log(\"success\");\n  //   } catch (err) {\n  //     toast.error(err, {\n  //       position: \"top-center\",\n  //       autoClose: 3000,\n  //       hideProgressBar: true,\n  //       closeOnClick: true,\n  //       pauseOnHover: false,\n  //       draggable: true,\n  //       progress: undefined,\n  //     });\n  //     console.log(err);\n  //   }\n  // };\n  //cara ke email js\n  // function onSubmit(e) {\n  //   e.preventDefault();\n  //   emailjs\n  //     .sendForm(\n  //       \"service_fm9tvhr\",\n  //       \"template_5uldcot\",\n  //       e.target,\n  //       \"user_PTcswjb7gW4kgFL6hIIH4\"\n  //     )\n  //     .then((res) => {\n  //       console.log(res.text);\n  //     })\n  //     .catch((err) => console.log(err.text));\n  // }\n  // const [contactNumber, setContactNumber] = useState(\"000000\");\n  // const generateContactNumber = () => {\n  //   const numStr = \"000000\" + ((Math.random() * 1000000) | 0);\n  //   setContactNumber(numStr.substring(numStr.length - 6));\n  // };\n  // const onSubmit = (data) => {\n  //   console.log(data);\n  //   generateContactNumber();\n  //   sendForm(\"service_fm9tvhr\", \"template_5uldcot\", \"#contact-form\").then(\n  //     function (response) {\n  //       console.log(\"SUCCESS!\", response.status, response.text);\n  //     },\n  //     function (error) {\n  //       console.log(\"FAILED...\", error);\n  //     }\n  //   );\n  // };\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(FormWrap, {\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          to: \"/\",\n          children: \"dolla\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormContent, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            action: \"#\" // name=\"stj-contact-form\"\n            ,\n            onSubmit: handleSubmit(onSubmit),\n            children: [/*#__PURE__*/_jsxDEV(FormH1, {\n              children: \"Let's Talk\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"name\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n              type: \"text\",\n              name: \"name\" // value={name}\n              // onChange={handleChange}\n              ,\n              ...register(\"name\", {\n                required: true\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorWrap, {\n              children: errors.name && \"You must enter your name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n              type: \"text\",\n              name: \"email\" // value={email}\n              // onChange={handleChange}\n              ,\n              ...register(\"email\", {\n                required: true,\n                pattern: {\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                  message: \"this needs to be a valid email address\"\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorWrap, {\n              children: errors.email && \"You must enter your email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"phone\",\n              children: \"Phone Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n              type: \"phone\",\n              name: \"phone\" // value={phone}\n              // onChange={handleChange}\n              ,\n              ...register(\"phone\", {\n                required: false\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"message\",\n              children: \"Message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormInputMessage, {\n              type: \"message\",\n              name: \"message\" // value={message}\n              // onChange={handleChange}\n              ,\n              ...register(\"message\", {\n                required: true\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorWrap, {\n              children: errors.message && \"You must enter your message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n              type: \"submit\",\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"HLC1IFclXfL/K+q6lxeDS/Po7Wk=\", false, function () {\n  return [useForm];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Dev/react-form/src/App.js"],"names":["React","useState","Container","FormWrap","Icon","FormContent","Form","FormH1","FormLabel","FormInput","ErrorWrap","FormInputMessage","FormButton","useForm","init","sendForm","App","register","handleSubmit","formState","errors","onSubmit","data","console","log","required","name","pattern","value","message","email"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Container,\n  FormWrap,\n  Icon,\n  FormContent,\n  Form,\n  FormH1,\n  FormLabel,\n  FormInput,\n  ErrorWrap,\n  FormInputMessage,\n  FormButton,\n} from \"./ContactFormElements\";\n// import { ToastContainer, toast } from \"react-toastify\";\n// import \"react-toastify/dist/ReactToastify.css\";\nimport { useForm } from \"react-hook-form\";\n// import axios from \"axios\";\nimport { init, sendForm } from \"emailjs-com\";\ninit(\"user_PTcswjb7gW4kgFL6hIIH4\");\n\nconst App = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  //ini cara ke node js\n\n  // async function onSubmit(values) {\n  //   const REACT_PUBLIC_API_URL = \"http://localhost:3000\";\n  //   let config = {\n  //     method: \"POST\",\n  //     url: `${process.env.REACT_PUBLIC_API_URL}/pai/contact`,\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     data: values,\n  //   };\n\n  //   try {\n  //     const response = await axios(config);\n  //     console.log(response);\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // }\n\n  // console.log(errors);\n\n  //ini dengan cara ke google sheet\n\n  // const [data, setData] = useState({\n  //   name: \"\",\n  //   email: \"\",\n  //   phone: \"\",\n  //   message: \"\",\n  // });\n\n  // const { name, email, phone, message } = data;\n\n  // const handleChange = (e) => {\n  //   setData({ ...data, [e.target.name]: e.target.value });\n  // };\n\n  // const onSubmit = async (e) => {\n  //   e.preventDefault();\n\n  //   try {\n  //     const response = await fetch(\n  //       \"https://v1.nocodeapi.com/mfikri_/google_sheets/AbjCYjUIBePJWqnU?tabId=Sheet1\",\n  //       {\n  //         method: \"POST\",\n  //         headers: {\n  //           \"Content-Type\": \"application/json\",\n  //         },\n  //         body: JSON.stringify([\n  //           [name, email, phone, message, new Date().toLocaleString()],\n  //         ]),\n  //       }\n  //     );\n  //     await response.json();\n  //     setData({ ...data, name: \"\", email: \"\", phone: \"\", message: \"\" });\n  //     toast.success(\"Success send message\", {\n  //       position: \"top-center\",\n  //       autoClose: 3000,\n  //       hideProgressBar: true,\n  //       closeOnClick: true,\n  //       pauseOnHover: false,\n  //       draggable: true,\n  //       progress: undefined,\n  //     });\n  //     console.log(\"success\");\n  //   } catch (err) {\n  //     toast.error(err, {\n  //       position: \"top-center\",\n  //       autoClose: 3000,\n  //       hideProgressBar: true,\n  //       closeOnClick: true,\n  //       pauseOnHover: false,\n  //       draggable: true,\n  //       progress: undefined,\n  //     });\n  //     console.log(err);\n  //   }\n  // };\n\n  //cara ke email js\n\n  // function onSubmit(e) {\n  //   e.preventDefault();\n  //   emailjs\n  //     .sendForm(\n  //       \"service_fm9tvhr\",\n  //       \"template_5uldcot\",\n  //       e.target,\n  //       \"user_PTcswjb7gW4kgFL6hIIH4\"\n  //     )\n  //     .then((res) => {\n  //       console.log(res.text);\n  //     })\n  //     .catch((err) => console.log(err.text));\n  // }\n\n  // const [contactNumber, setContactNumber] = useState(\"000000\");\n\n  // const generateContactNumber = () => {\n  //   const numStr = \"000000\" + ((Math.random() * 1000000) | 0);\n  //   setContactNumber(numStr.substring(numStr.length - 6));\n  // };\n\n  // const onSubmit = (data) => {\n  //   console.log(data);\n  //   generateContactNumber();\n  //   sendForm(\"service_fm9tvhr\", \"template_5uldcot\", \"#contact-form\").then(\n  //     function (response) {\n  //       console.log(\"SUCCESS!\", response.status, response.text);\n  //     },\n  //     function (error) {\n  //       console.log(\"FAILED...\", error);\n  //     }\n  //   );\n  // };\n\n  const onSubmit = (data) => {\n    console.log(data);\n  };\n\n  return (\n    <>\n      <Container>\n        <FormWrap>\n          <Icon to=\"/\">dolla</Icon>\n          <FormContent>\n            <Form\n              action=\"#\"\n              // name=\"stj-contact-form\"\n              onSubmit={handleSubmit(onSubmit)}\n            >\n              <FormH1>Let's Talk</FormH1>\n              <FormLabel htmlFor=\"name\">Name</FormLabel>\n              <FormInput\n                type=\"text\"\n                name=\"name\"\n                // value={name}\n                // onChange={handleChange}\n                {...register(\"name\", { required: true })}\n              />\n              <ErrorWrap>{errors.name && \"You must enter your name\"}</ErrorWrap>\n              <FormLabel htmlFor=\"email\">Email</FormLabel>\n              <FormInput\n                type=\"text\"\n                name=\"email\"\n                // value={email}\n                // onChange={handleChange}\n                {...register(\"email\", {\n                  required: true,\n                  pattern: {\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                    message: \"this needs to be a valid email address\",\n                  },\n                })}\n              />\n              <ErrorWrap>\n                {errors.email && \"You must enter your email address\"}\n              </ErrorWrap>\n              <FormLabel htmlFor=\"phone\">Phone Number</FormLabel>\n              <FormInput\n                type=\"phone\"\n                name=\"phone\"\n                // value={phone}\n                // onChange={handleChange}\n                {...register(\"phone\", { required: false })}\n              />\n              <FormLabel htmlFor=\"message\">Message</FormLabel>\n              <FormInputMessage\n                type=\"message\"\n                name=\"message\"\n                // value={message}\n                // onChange={handleChange}\n                {...register(\"message\", { required: true })}\n              />\n              <ErrorWrap>\n                {errors.message && \"You must enter your message\"}\n              </ErrorWrap>\n              <FormButton type=\"submit\">Send</FormButton>\n              {/* <ToastContainer /> */}\n              {/* <input\n                type=\"hidden\"\n                name=\"contact_number\"\n                value={contactNumber}\n              /> */}\n            </Form>\n          </FormContent>\n        </FormWrap>\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}