{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\react-form\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Container, FormWrap, Icon, FormContent, Form, FormH1, FormLabel, FormInput, ErrorWrap, FormInputMessage, FormButton } from \"./ContactFormElements\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    watch\n  } = useForm();\n  console.log(watch(\"name\")); //ini dengan cara ke google sheet\n\n  const [data, setData] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    message: \"\"\n  });\n  const {\n    name,\n    email,\n    phone,\n    message\n  } = data;\n\n  const handleChange = e => {\n    setData({ ...data,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = async e => {\n    console.log(e);\n    e.preventDefault();\n\n    try {\n      const response = await fetch(\"https://v1.nocodeapi.com/mfikri_/google_sheets/AbjCYjUIBePJWqnU?tabId=Sheet1\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify([[name, email, phone, message, new Date().toLocaleString()]])\n      });\n      await response.json();\n      setData({ ...data,\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        message: \"\"\n      });\n      toast.success(\"Success send message\", {\n        position: \"top-center\",\n        autoClose: 3000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: true,\n        progress: undefined\n      });\n      console.log(\"success\");\n    } catch (err) {\n      toast.error(err, {\n        position: \"top-center\",\n        autoClose: 3000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: true,\n        progress: undefined\n      });\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(FormWrap, {\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          to: \"/\",\n          children: \"dolla\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormContent, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            action: \"#\",\n            name: \"contact-form\",\n            onSubmit: handleSubmit(onSubmit),\n            children: [/*#__PURE__*/_jsxDEV(FormH1, {\n              children: \"Let's Talk\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"name\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n              type: \"text\",\n              name: \"name\",\n              value: name,\n              onChange: handleChange,\n              ...register(\"name\", {\n                required: true\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorWrap, {\n              children: errors.name && \"You must enter your name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n              type: \"text\",\n              name: \"email\",\n              value: email,\n              onChange: handleChange,\n              ...register(\"email\", {\n                required: true,\n                pattern: {\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                  message: \"this needs to be a valid email address\"\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorWrap, {\n              children: errors.email && \"You must enter your email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"phone\",\n              children: \"Phone Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n              type: \"phone\",\n              name: \"phone\",\n              value: phone,\n              onChange: handleChange,\n              ...register(\"phone\", {\n                required: false\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              htmlFor: \"message\",\n              children: \"Message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormInputMessage, {\n              type: \"message\",\n              name: \"message\",\n              value: message,\n              onChange: handleChange,\n              ...register(\"message\", {\n                required: true\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorWrap, {\n              children: errors.message && \"You must enter your message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n              type: \"submit\",\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"0ahfuscjD655w5dPrDCmKNPOb2s=\", false, function () {\n  return [useForm];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Dev/react-form/src/App.js"],"names":["React","useState","Container","FormWrap","Icon","FormContent","Form","FormH1","FormLabel","FormInput","ErrorWrap","FormInputMessage","FormButton","ToastContainer","toast","useForm","App","register","handleSubmit","formState","errors","watch","console","log","data","setData","name","email","phone","message","handleChange","e","target","value","onSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","Date","toLocaleString","json","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","err","error","required","pattern"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Container,\n  FormWrap,\n  Icon,\n  FormContent,\n  Form,\n  FormH1,\n  FormLabel,\n  FormInput,\n  ErrorWrap,\n  FormInputMessage,\n  FormButton,\n} from \"./ContactFormElements\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useForm } from \"react-hook-form\";\n\nconst App = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    watch,\n  } = useForm();\n\n  console.log(watch(\"name\"));\n\n  //ini dengan cara ke google sheet\n\n  const [data, setData] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    message: \"\",\n  });\n\n  const { name, email, phone, message } = data;\n\n  const handleChange = (e) => {\n    setData({ ...data, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = async (e) => {\n    console.log(e);\n    e.preventDefault();\n\n    try {\n      const response = await fetch(\n        \"https://v1.nocodeapi.com/mfikri_/google_sheets/AbjCYjUIBePJWqnU?tabId=Sheet1\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify([\n            [name, email, phone, message, new Date().toLocaleString()],\n          ]),\n        }\n      );\n      await response.json();\n      setData({ ...data, name: \"\", email: \"\", phone: \"\", message: \"\" });\n      toast.success(\"Success send message\", {\n        position: \"top-center\",\n        autoClose: 3000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: true,\n        progress: undefined,\n      });\n      console.log(\"success\");\n    } catch (err) {\n      toast.error(err, {\n        position: \"top-center\",\n        autoClose: 3000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: false,\n        draggable: true,\n        progress: undefined,\n      });\n      console.log(err);\n    }\n  };\n\n  return (\n    <>\n      <Container>\n        <FormWrap>\n          <Icon to=\"/\">dolla</Icon>\n          <FormContent>\n            <Form\n              action=\"#\"\n              name=\"contact-form\"\n              onSubmit={handleSubmit(onSubmit)}\n            >\n              <FormH1>Let's Talk</FormH1>\n              <FormLabel htmlFor=\"name\">Name</FormLabel>\n              <FormInput\n                type=\"text\"\n                name=\"name\"\n                value={name}\n                onChange={handleChange}\n                {...register(\"name\", { required: true })}\n              />\n              <ErrorWrap>{errors.name && \"You must enter your name\"}</ErrorWrap>\n              <FormLabel htmlFor=\"email\">Email</FormLabel>\n              <FormInput\n                type=\"text\"\n                name=\"email\"\n                value={email}\n                onChange={handleChange}\n                {...register(\"email\", {\n                  required: true,\n                  pattern: {\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                    message: \"this needs to be a valid email address\",\n                  },\n                })}\n              />\n              <ErrorWrap>\n                {errors.email && \"You must enter your email address\"}\n              </ErrorWrap>\n              <FormLabel htmlFor=\"phone\">Phone Number</FormLabel>\n              <FormInput\n                type=\"phone\"\n                name=\"phone\"\n                value={phone}\n                onChange={handleChange}\n                {...register(\"phone\", { required: false })}\n              />\n              <FormLabel htmlFor=\"message\">Message</FormLabel>\n              <FormInputMessage\n                type=\"message\"\n                name=\"message\"\n                value={message}\n                onChange={handleChange}\n                {...register(\"message\", { required: true })}\n              />\n              <ErrorWrap>\n                {errors.message && \"You must enter your message\"}\n              </ErrorWrap>\n              <FormButton type=\"submit\">Send</FormButton>\n              <ToastContainer />\n            </Form>\n          </FormContent>\n        </FormWrap>\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}